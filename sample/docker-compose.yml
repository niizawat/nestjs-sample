version: '3.1'

services:
  app:
    container_name: sampleapp
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      target: ecs
    ports:
      - 3000:3000
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - USE_XRAY=0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jeager:4318
    env_file:
      - .env.local

  lambda:
    container_name: nestjslambda
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      target: lambdafunc
    ports:
      - 9000:8080
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - USE_XRAY=0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jeager:4318
    env_file:
      - .env

  db:
    image: postgis/postgis:latest
    platform: linux/amd64
    restart: always
    ports:
      - 5432:5432
    # volumes:
    #   - db_data:/var/lib/postgresql/data
    env_file:
      - .env.local

  jeager:
    image: jaegertracing/all-in-one:latest
    platform: linux/amd64
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 16686:16686
      - 4318:4318
      - 4317:4317
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 14268:14268
      - 9411:9411
    command: '--log-level=debug'

  # otel:
  #   image: public.ecr.aws/aws-observability/aws-otel-collector:latest
  #   command: ["--config=/etc/otel-agent-config.yaml"]
  #   environment:
  #     - AWS_PROFILE=niizawa
  #     - AWS_REGION=ap-northeast-1
  #   ports:
  #     - 4318:4318
  #     - 4317:4317
  #   volumes:
  #     - ./otel-config.yaml:/etc/otel-agent-config.yaml
  #     - ~/.aws:/root/.aws

  fluentbit:
    image: fluent/fluent-bit:latest
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    ports:
      - 24224:24224

volumes:
  db_data: {}
